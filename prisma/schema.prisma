// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// schema.prisma

model User {
  id    String  @id   // Clerk userId
  firstName String
  lastName  String
  email String @unique
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  polls Poll[]        @relation("UserPolls")
}

model Poll {
  id                 String     @id @default(uuid())
  title              String
  description        String
  options            String[]   // e.g., ["A", "B", "C"]
  votes              Int[]      // parallel to options; e.g., [3, 5, 2]
  totalVotes         Int        @default(0)
  allowMultipleVotes Boolean    @default(false)
  requireAuth        Boolean    @default(false)
  status             PollStatus @default(LIVE)
  createdAt          DateTime   @default(now())
  expiresAt          DateTime

  // Relation to user
  creatorId          String
  creator            User       @relation("UserPolls", fields: [creatorId], references: [id])
}

enum PollStatus {
  LIVE
  CLOSED
}
